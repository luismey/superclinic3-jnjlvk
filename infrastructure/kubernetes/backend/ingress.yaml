apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress
  namespace: default
  labels:
    app: porfin
    component: backend
    environment: production
  annotations:
    # Ingress class and IP configuration
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "porfin-backend-ip"
    
    # SSL/TLS configuration
    networking.gke.io/managed-certificates: "porfin-backend-cert"
    networking.gke.io/v1beta1.FrontendConfig: "porfin-frontend-config"
    
    # Load balancer configuration
    cloud.google.com/load-balancer-type: "External"
    cloud.google.com/backend-config: '{"default": "backend-config"}'
    cloud.google.com/network-tier: "Premium"
    cloud.google.com/app-protocols: '{"http":"HTTP", "https":"HTTPS"}'
    
    # Security policy
    cloud.google.com/security-policy: "porfin-security-policy"
    
    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization, X-Request-With"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://*.porfin.com"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
    # Request handling configuration
    nginx.ingress.kubernetes.io/proxy-body-size: "8m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "100"
    nginx.ingress.kubernetes.io/limit-connections: "1000"

spec:
  # TLS configuration
  tls:
  - hosts:
    - api.porfin.com
    secretName: porfin-backend-tls
  
  # Routing rules
  rules:
  - host: api.porfin.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              name: http