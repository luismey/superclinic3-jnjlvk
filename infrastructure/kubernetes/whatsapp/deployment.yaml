apiVersion: apps/v1
kind: Deployment
metadata:
  name: whatsapp-service
  namespace: default
  labels:
    app: whatsapp-service
    component: messaging
    version: v1
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/metrics"
spec:
  # Initial replicas as per service configuration
  replicas: 1
  # RollingUpdate strategy for zero-downtime deployments
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  # Pod selector matching
  selector:
    matchLabels:
      app: whatsapp-service
  template:
    metadata:
      labels:
        app: whatsapp-service
        component: messaging
        version: v1
    spec:
      # Enhanced security context for pod-level security
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
        readOnlyRootFilesystem: true
      containers:
      - name: whatsapp-service
        image: whatsapp-service:latest
        imagePullPolicy: Always
        # Expose HTTP and WebSocket ports
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        - name: websocket
          containerPort: 8080
          protocol: TCP
        # Resource requests and limits as per service configuration
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "1"
            memory: "2Gi"
        # Environment configuration from ConfigMap and Secrets
        envFrom:
        - configMapRef:
            name: whatsapp-configmap
        - secretRef:
            name: whatsapp-secrets
        # Liveness probe for container health
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        # Readiness probe for service availability
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        # Startup probe for initial container startup
        startupProbe:
          httpGet:
            path: /startup
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 30
        # Volume mounts for temporary storage
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: cache-volume
          mountPath: /cache
      # Pod anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - whatsapp-service
              topologyKey: kubernetes.io/hostname
      # Volumes definition
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: cache-volume
        emptyDir: {}
      # Service account for RBAC
      serviceAccountName: whatsapp-service-sa
      # Node selector for targeted deployment
      nodeSelector:
        type: messaging
      # Tolerations for node taints
      tolerations:
      - key: "messaging"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
---
# HorizontalPodAutoscaler for automatic scaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: whatsapp-service-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: whatsapp-service
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 75
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
    scaleUp:
      stabilizationWindowSeconds: 60