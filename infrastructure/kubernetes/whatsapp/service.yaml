apiVersion: v1
kind: Service
metadata:
  name: whatsapp-service
  namespace: default
  labels:
    app: whatsapp-service
    component: messaging
    tier: backend
    environment: production
  annotations:
    # Prometheus monitoring configuration
    prometheus.io/scrape: "true"
    prometheus.io/port: "http"
    prometheus.io/path: "/metrics"
    
    # Session affinity and connection draining settings
    service.beta.kubernetes.io/session-affinity-client-ip-timeout: "10800"
    service.beta.kubernetes.io/connection-draining-timeout: "300"
    
    # Network security - restrict source ranges
    service.beta.kubernetes.io/load-balancer-source-ranges: "10.0.0.0/8"

spec:
  # Use ClusterIP for internal service discovery
  type: ClusterIP
  
  # Select pods with matching labels
  selector:
    app: whatsapp-service
    component: messaging
  
  # Define service ports
  ports:
    # HTTP port for REST API and health checks
    - name: http
      protocol: TCP
      port: 3000
      targetPort: http
    
    # WebSocket port for real-time messaging
    - name: websocket
      protocol: TCP
      port: 8080
      targetPort: websocket
  
  # Configure session affinity for WebSocket connections
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800