# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = app/db/migrations

# template used to generate migration file names
file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# timezone to use when rendering the date within the migration file
timezone = UTC

# max length of characters to apply to the "slug" field
truncate_slug_length = 40

# version location specification; this defaults to migrations/versions
version_locations = app/db/migrations/versions

# set to 'true' to run the environment during the 'revision' command
revision_environment = true

# set to 'true' to allow .pyc and .pyo files
sourceless = false

# output encoding used when revision files are written
output_encoding = utf-8

# version path separator (automatically converted for Windows)
version_path_separator = os

# compare_type compares column types in migrations
compare_type = true

# compare_server_default compares server defaults in migrations
compare_server_default = true

# transaction per migration
transaction_per_migration = true

# retry failed migrations
max_retries = 3
retry_interval = 5

# connection timeout in seconds
connection_timeout = 30

# SSL configuration for secure database connections
sqlalchemy.url = %(SQLALCHEMY_DATABASE_URI)s
sqlalchemy.connect_args = {"sslmode": "verify-full", "sslcert": "/etc/porfin/certs/client-cert.pem", "sslkey": "/etc/porfin/certs/client-key.pem", "sslrootcert": "/etc/porfin/certs/server-ca.pem"}
sqlalchemy.pool_size = 5
sqlalchemy.max_overflow = 10
sqlalchemy.pool_timeout = 30
sqlalchemy.pool_recycle = 1800

[post_write_hooks]
# post-write hooks to run after creating revision

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console,file

[formatters]
keys = generic,detailed

[logger_root]
level = NOTSET
handlers = console,file
qualname =

[logger_sqlalchemy]
level = WARNING
handlers = console,file
qualname = sqlalchemy.engine
propagate = 0

[logger_alembic]
level = INFO
handlers = console,file
qualname = alembic
propagate = 0

[handler_console]
class = logging.StreamHandler
formatter = generic
args = (sys.stdout,)

[handler_file]
class = logging.handlers.RotatingFileHandler
formatter = detailed
args = ('/var/log/porfin/migrations.log', 'a', 10485760, 5)

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

[formatter_detailed]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %Y-%m-%d %H:%M:%S

# Environment-specific configurations
[development]
sqlalchemy.echo = true
logging.level = DEBUG

[staging]
sqlalchemy.echo = false
logging.level = INFO

[production]
sqlalchemy.echo = false
logging.level = WARNING